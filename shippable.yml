build:
  pre_ci:
    - docker build -t ci_image:latest -f Dockerfile.ci .
  pre_ci_boot:
    image_name: ci_image
    image_tag: latest
    pull: false
    options: "-e NGROK_DOMAIN=ysyou.me -e NGROK_VERSION=1.7 -e AWS_ACCESS_KEY_ID=AKIAISQRBHZZPU25XJXQ -e AWS_SECRET_ACCESS_KEY=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"
  ci:
    - cd ngrok
    - openssl genrsa -out base.key 2048
    - openssl req -new -x509 -nodes -key base.key -days 10000 -subj "/CN=$NGROK_DOMAIN" -out base.pem
    - openssl genrsa -out server.key 2048
    - openssl req -new -key server.key -subj "/CN=$NGROK_DOMAIN" -out server.csr
    - openssl x509 -req -in server.csr -CA base.pem -CAkey base.key -CAcreateserial -days 10000 -out server.crt
    - cp base.pem assets/client/tls/ngrokroot.crt
    - make release-server release-client
    - cd ..
    - mkdir dist
    - tar zcvf source.tar.gz ngrok && mv source.tar.gz dist
    - cp ngrok/bin/ngrokd . && tar zcvf ngrokd.tar.gz ngrokd && rm ngrokd && mv ngrokd.tar.gz dist
    - cp ngrok/bin/ngrok ./ngrok_linux && tar zcvf ngrok_linux.tar.gz ngrok_linux && rm ngrok_linux && mv ngrok_linux.tar.gz dist
    - cp ngrok/server.key build_context/
    - cp ngrok/server.crt build_context/
    - cp ngrok/bin/ngrokd build_context/
    - cd ngrok
    - GOOS=darwin GOARCH=amd64 make release-client
    - cd ..
    - cp ngrok/bin/darwin_amd64/ngrok ./ngrok_mac && tar zcvf ngrok_mac.tar.gz ngrok_mac && rm ngrok_mac && mv ngrok_mac.tar.gz dist
    - cd build_context
    - docker build -t youyongsong/bifrost:latest -f Dockerfile .
    - cd ..
    - aws s3 cp dist/ s3://bifrost-assets/$NGROK_VERSION/ --recursive
  on_success:
    - docker push youyongsong/bifrost:latest
integrations:
  hub:
    - integrationName: docker_registry
      type: docker

